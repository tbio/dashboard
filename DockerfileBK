FROM ubuntu:14.04

MAINTAINER monoku "strike1609@gmail.com"


RUN DEBIAN_FRONTEND=noninteractive apt-get -qq update

#install nodejs
RUN DEBIAN_FRONTEND=noninteractive apt-get -qq install -y -u libssl1.0.0 openssl software-properties-common python-software-properties python g++ make
RUN DEBIAN_FRONTEND=noninteractive apt-get -qq install -y zsh nano curl unzip wget dpkg libnss3-1d python-dev python-setuptools git-core python-pip build-essential

RUN pip install --upgrade pip
RUN pip install --upgrade virtualenv
RUN pip install --upgrade virtualenvwrapper

# install packages needed for image manipulation
RUN DEBIAN_FRONTEND=noninteractive apt-get -qq install -y libjpeg-turbo8-dev libjpeg8-dev libfreetype6 libfreetype6-dev zlib1g-dev zlib1g-dev libfreetype6-dev liblcms1-dev python-imaging

# install packages needed for manage xml
RUN DEBIAN_FRONTEND=noninteractive apt-get -qq install -y libxml2-dev libxslt-dev lib32z1-dev

# add pip packages
RUN bash -c 'echo "export WORKON_HOME=$HOME/sites" >> /.zshrc'
RUN bash -c 'echo "export PIP_DOWNLOAD_CACHE=$HOME/.pip_download_cache" >> /.zshrc'
RUN export WORKON_HOME=$HOME/sites
RUN export PIP_DOWNLOAD_CACHE=$HOME/.pip_download_cache

# we need to install postgresql
RUN DEBIAN_FRONTEND=noninteractive apt-get -qq install -y libpq-dev --force-yes
RUN locale-gen en_US.UTF-8
ENV LANG       en_US.UTF-8
ENV LC_ALL     en_US.UTF-8
RUN DEBIAN_FRONTEND=noninteractive apt-get -qq install -y -q postgresql postgresql-contrib
RUN /etc/init.d/postgresql stop

#install PIL
RUN ln -s /usr/lib/`uname -i`-linux-gnu/libfreetype.so /usr/lib/ ;
RUN ln -s /usr/lib/`uname -i`-linux-gnu/libjpeg.so /usr/lib/ ;
RUN ln -s /usr/lib/`uname -i`-linux-gnu/libz.so /usr/lib/;

RUN mkdir -p /webapp/
RUN virtualenv --no-site-packages /webapp/


RUN /webapp/bin/pip install Pillow==2.5.0
RUN /webapp/bin/pip install bpython>=0.11 --allow-external bpython --allow-unverified bpython
RUN /webapp/bin/pip install lxml==3.3.5
RUN /webapp/bin/pip install billiard==3.3.0.18
RUN /webapp/bin/pip install greenlet==0.4.2
RUN /webapp/bin/pip install hiredis==0.1.3
RUN /webapp/bin/pip install psycopg2==2.4.6
RUN /webapp/bin/pip install pycrypto==2.6

RUN /webapp/bin/pip install textblob==0.8.4
RUN /webapp/bin/pip install PyYAML==3.11
RUN /webapp/bin/python -m textblob.download_corpora

# RUN echo "--------install oh my zsh--------"
RUN git clone git://github.com/robbyrussell/oh-my-zsh.git /.oh-my-zsh
RUN cp /.oh-my-zsh/templates/zshrc.zsh-template /.zshrc
RUN chsh -s /bin/zsh

RUN \
  echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections && \
  echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections && \
  add-apt-repository -y ppa:webupd8team/java && \
apt-get update && \
apt-get install -y oracle-java7-installer

# RUN /webapp/bin/pip install -r /webapp/default/requirements.txt


# #create the source folder
RUN mkdir -p /webapp/default/

# # RUN echo "--------activate the virtualenv by default--------"
RUN bash -c 'echo "source /webapp/bin/activate; cd /webapp/tbio/" >> /.zshrc'
RUN LOGFILE=/webapp/tbio/logs/gunicorn.log
ADD requirements.txt /webapp/default/requirements.txt
RUN /webapp/bin/pip install -r /webapp/default/requirements.txt

WORKDIR /webapp/default
# RUN echo "--------add keys--------"
RUN mkdir -p /root/.ssh
ADD .docker/id_rsa /root/.ssh/id_rsa
RUN chmod 700 /root/.ssh/id_rsa

ADD .docker/id_rsa.pub /root/.ssh/id_rsa.pub
RUN chmod 700 /root/.ssh/id_rsa.pub

# RUN echo "--------add github config--------"
ADD .docker/.gitconfig /.gitconfig
RUN chmod 700 /.gitconfig

RUN DEBIAN_FRONTEND=noninteractive apt-get -qq clean

WORKDIR /

EXPOSE 9000
CMD ["/bin/zsh"]